---
import Icon from 'astro-icon';
import PostTags from '~/components/blog/Tags.astro';

import { BLOG } from '~/config.mjs';
import type { Post } from '~/types';

import { getPermalink } from '~/utils/permalinks';
import { findImage } from '~/utils/images';
import { getFormattedDate } from '~/utils/utils';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const image = await findImage(post.image);

const link = !BLOG?.post?.disabled ? getPermalink(post.permalink, 'post') : '';
---

<article class={`max-w-md mx-auto md:max-w-none grid gap-6 md:gap-8 ${image ? 'md:grid-cols-2' : ''}`}>
  {
    image && (
      <a class="relative block group" href={link ?? 'javascript:void(0)'}>
        <div class="relative h-0 pb-[56.25%] md:pb-[75%] md:h-72 lg:pb-[56.25%] overflow-hidden bg-gray-400 dark:bg-slate-700 rounded shadow-lg">
        </div>
      </a>
    )
  }
  <div class="mt-2">
    <header>
      <div class="mb-0">
        <span class="text-xs">
          <Icon name="tabler:clock" class="w-3.5 h-3.5 inline-block -mt-0.5 text-gray-500 dark:text-gray-400" />
          <time datetime={String(post.publishDate)}>{getFormattedDate(post.publishDate)}</time>
        </span>
      </div>

      <h2 class="text-xl sm:text-2xl font-bold leading-tight mb-1 font-heading text-gray-700 dark:text-slate-300">
        <div class="flex items-center">
        {
          post.icon && <Icon name={post.icon} class="w-10 h-10 mr-2" />
        }
        {
          link ? (
            <a class="hover:text-primary dark:hover:text-blue-700 transition ease-in duration-200" href={link}>
              {post.title}
            </a>
          ) : (
            post.title
          )
        }
        </div>
      </h2>
    </header>

    {post.excerpt && <p class="flex-grow text-gray-500 dark:text-slate-400 text-lg">{post.excerpt}</p>}
    <footer class="mt-1">
      <PostTags tags={post.tags} />
    </footer>
  </div>
</article>
